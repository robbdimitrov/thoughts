syntax = "proto3";

package thoughts;

/**
 * General
 */

message Error {
  int32 code = 1;
  string error = 2;
  string message = 3;
}

message DataRequest {
  int32 user_id = 1;
  string token = 2;
  int32 page = 3;
  int32 limit = 4;
}

message Identifiers {
  repeated int32 ids = 1;
}

/**
 * Status
 */

message Status {
  string message = 1;
  Error error = 2;
}

message AuthStatus {
  string token_type = 1;
  string access_token = 2;
  string refresh_token = 3;
  int32 user_id = 4;
  int32 session_id = 5;
  Error error = 6;
}

message UserStatus {
  User user = 1;
  Error error = 2;
}

message PostStatus {
  Post post = 1;
  Error error = 2;
}

/**
 * Authentication
 */

message Credentials {
  string username = 1;
  string password = 2;
  string user_agent = 3;
  string email = 4;
}

message AuthRequest {
  string token = 1;
}

/**
 * Users
 */

message UserRequest {
  int32 user_id = 1;
  string username = 2;
  string token = 3;
}

message Users {
  repeated User users = 1;
}

message UserUpdates {
  string username = 1;
  string email = 2;
  string name = 3;
  string password = 4;
  string bio = 5;
  string old_password = 6;
  string avatar = 7;
  string token = 8;
}

message User {
  int32 id = 1;
  string username = 2;
  string email = 3;
  string name = 4;
  string bio = 5;
  string avatar = 6;
  int32 posts = 7;
  int32 likes = 8;
  int32 following = 9;
  int32 followers = 10;
  string date_created = 11;
}

/**
 * Sessions
 */

message Session {
  int32 id = 1;
  string name = 2;
  string user_agent = 3;
  int32 user_id = 4;
  string date_created = 5;
}

message Sessions {
  repeated Session sessions = 1;
  Error error = 2;
}

message SessionRequest {
  int32 session_id = 1;
  string token = 2;
}

/**
 * Posts
 */

message Post {
  int32 id = 1;
  string content = 2;
  int32 user_id = 3;
  int32 likes = 4;
  bool liked = 5;
  int32 retweets = 6;
  bool retweeted = 7;
  string date_created = 8;
}

message PostUpdates {
  int32 post_id = 1;
  string content = 2;
  string token = 3;
}

message Posts {
  repeated Post posts = 1;
}

message PostRequest {
  int32 post_id = 1;
  string token = 2;
}

/**
 * Services
 */

service UserService {
  rpc CreateUser(UserUpdates) returns (Status);
  rpc GetUser(UserRequest) returns (UserStatus);
  rpc UpdateUser(UserUpdates) returns (Status);
  rpc DeleteUser(UserRequest) returns (Status);
}

service FollowService {
  rpc GetFollowing(DataRequest) returns (Users);
  rpc GetFollowingIds(UserRequest) returns (Identifiers);
  rpc GetFollowers(DataRequest) returns (Users);
  rpc GetFollowersIds(UserRequest) returns (Identifiers);
  rpc FollowUser(UserRequest) returns (Status);
  rpc UnfollowUser(UserRequest) returns (Status);
}

service AuthService {
  rpc Login(Credentials) returns (AuthStatus);
  rpc Refresh(AuthRequest) returns (AuthStatus);
  rpc Validate(AuthRequest) returns (AuthStatus);
  rpc ValidatePassword(Credentials) returns (Status);
}

service SessionService {
  rpc GetSessions(AuthRequest) returns (Sessions);
  rpc DeleteSession(SessionRequest) returns (Status);
}

service PostService {
  rpc CreatePost(PostUpdates) returns (PostStatus);
  rpc GetPost(PostRequest) returns (PostStatus);
  rpc GetFeed(DataRequest) returns (Posts);
  rpc GetPosts(DataRequest) returns (Posts);
  rpc GetLikedPosts(DataRequest) returns (Posts);
  rpc DeletePost(PostRequest) returns (Status);
}

service ActionService {
  rpc LikePost(PostRequest) returns (Status);
  rpc UnlikePost(PostRequest) returns (Status);
  rpc RetweetPost(PostRequest) returns (Status);
  rpc RemoveRetweet(PostRequest) returns (Status);
}
