syntax = "proto3";

package thoughts;

// -------------------- Auth --------------------

message Empty {}

message Credentials {
  string email = 1;
  string password = 2;
}

message AuthRequest {
  int32 session_id = 1;
}

message Session {
  int32 id = 1;
  int32 user_id = 2;
  string created = 3;
}

message CreateSessionResponse {
  int32 session_id = 1;
}

service AuthService {
  rpc CreateSession(Credentials) returns (CreateSessionResponse);
  rpc ValidateSession(AuthRequest) returns (Session);
  rpc ValidatePassword(Credentials) returns (Empty);
  rpc DeleteSession(AuthRequest) returns (Empty);
}

// ------------------- Users --------------------

message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string name = 4;
  string bio = 5;
  string avatar = 6;
}

message CreateUserResponse {
  int32 user_id = 1;
}

message UpdateUserRequest {
  int32 user_id = 1;
  string username = 2;
  string email = 3;
  string password = 4;
  string old_password = 5;
  string name = 6;
  string bio = 7;
  string avatar = 8;
}

message UserRequest {
  int32 user_id = 1;
  int32 current_user_id = 2;
}

message GetUsersRequest {
  int32 user_id = 1;
  int32 current_user_id = 2;
  int32 page = 3;
  int32 limit = 4;
}

message User {
  int32 id = 1;
  string username = 2;
  string email = 3;
  string name = 4;
  string bio = 5;
  string avatar = 6;
  int32 posts = 7;
  int32 likes = 8;
  int32 following = 9;
  int32 followers = 10;
  string created = 11;
}

message Users {
  repeated User users = 1;
}

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(UserRequest) returns (User);
  rpc UpdateUser(UpdateUserRequest) returns (Empty);
}

service FollowService {
  rpc GetFollowing(GetUsersRequest) returns (Users);
  rpc GetFollowers(GetUsersRequest) returns (Users);
  rpc FollowUser(UserRequest) returns (Empty);
  rpc UnfollowUser(UserRequest) returns (Empty);
}

// ------------------- Posts --------------------

message Post {
  int32 id = 1;
  string content = 2;
  int32 user_id = 3;
  int32 likes = 4;
  bool liked = 5;
  int32 retweets = 6;
  bool retweeted = 7;
  string created = 8;
}

message Posts {
  repeated Post posts = 1;
}

message CreatePostRequest {
  int32 user_id = 1;
  string content = 2;
}

message CreatePostResponse {
  int32 post_id = 1;
}

message PostRequest {
  int32 post_id = 1;
  int32 user_id = 2;
}

message GetPostsRequest {
  int32 post_id = 1;
  int32 user_id = 2;
  int32 page = 3;
  int32 limit = 4;
}

service PostService {
  rpc CreatePost(CreatePostRequest) returns (CreatePostResponse);
  rpc GetPost(PostRequest) returns (Post);
  rpc GetFeed(GetPostsRequest) returns (Posts);
  rpc GetPosts(UserRequest) returns (Posts);
  rpc GetLikedPosts(UserRequest) returns (Posts);
  rpc DeletePost(PostRequest) returns (Empty);
}

service ActionService {
  rpc LikePost(PostRequest) returns (Empty);
  rpc UnlikePost(PostRequest) returns (Empty);
  rpc RetweetPost(PostRequest) returns (Empty);
  rpc RemoveRetweet(PostRequest) returns (Empty);
}
